"use strict";(self.webpackChunkregression_docs=self.webpackChunkregression_docs||[]).push([[1825],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,b=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(b,i(i({ref:t},u),{},{components:n})):a.createElement(b,i({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),r=n(6010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(7462),r=n(7294),o=n(6010),i=n(2466),l=n(6550),s=n(1980),c=n(7392),u=n(12);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,c]=b({queryString:n,groupId:a}),[p,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),h=(()=>{const e=s??p;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{h&&l(h)}),[h]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),f(e)}),[c,f,o]),tabValues:o}}var h=n(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,i.o5)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),a=c[n].value;a!==l&&(p(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},i,{className:(0,o.Z)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":l===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function k(e){const t=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",g.tabList)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function w(e){const t=(0,h.Z)();return r.createElement(k,(0,a.Z)({key:String(t)},e))}},2113:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>b,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),o=n(4866),i=n(5162);const l={sidebar_label:"Configuration"},s="Configuration",c={unversionedId:"creating-bots/csharp/configuration",id:"creating-bots/csharp/configuration",title:"Configuration",description:"Regression Games Bots are flexible and highly customizable.",source:"@site/docs/creating-bots/csharp/configuration.mdx",sourceDirName:"creating-bots/csharp",slug:"/creating-bots/csharp/configuration",permalink:"/creating-bots/csharp/configuration",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Configuration"},sidebar:"unitySidebar",previous:{title:"Seating and Spawning Bots",permalink:"/integrating-with-unity/seating-and-spawning-bots"},next:{title:"Creating Adaptive Bots",permalink:"/creating-bots/csharp/adaptive-bots"}},u={},p=[{value:"Project Setup",id:"project-setup",level:2},{value:"Bot Configuration",id:"bot-configuration",level:2},{value:"<code>IsSpawnable</code>",id:"isspawnable",level:3},{value:"<code>BotLifecycle</code>",id:"botlifecycle",level:3},{value:"Examples",id:"examples",level:4}],d={toc:p},m="wrapper";function b(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"Regression Games Bots are flexible and highly customizable.\nBots can simulate players, function as NPCs, interact with menus and UIs, validate gameplay, and more.\nBots run in separate threads in Unity and communicate with your game via state and action messages.\nEach Bot receives the current game state at a regular interval and uses our C# API to analyze the state,\nmake decisions, and interact with game elements via actions."),(0,r.kt)("h2",{id:"project-setup"},"Project Setup"),(0,r.kt)("p",null,"Each Unity C# bot is a collection of scripts and assets inside your project."),(0,r.kt)("p",null,"You can create a new bot by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"Regression Games -> Create New Bot")," menu option in Unity."),(0,r.kt)("p",null,"New bots are created inside your project at ",(0,r.kt)("inlineCode",{parentName:"p"},"Assets/RegressionGames/Runtime/Bots/{BotName}_{BotId}"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This directory can be renamed, but should match the namespace used in the ",(0,r.kt)("inlineCode",{parentName:"li"},".cs")," files for your bot as explained below.")),(0,r.kt)("p",null,"Each new bot is created with 2 files."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"BotRecord.asset")," which defines key information about the bot like ",(0,r.kt)("inlineCode",{parentName:"li"},"name")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"id"),"  ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"This file is used when starting bots in Unity to properly identify bots by their ",(0,r.kt)("inlineCode",{parentName:"li"},"id")," irrespective of their namespace or directory name."),(0,r.kt)("li",{parentName:"ul"},"This file is also used when you synchronize local Unity bots with Regression Games servers."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"BotEntryPoint.cs")," which extends ",(0,r.kt)("inlineCode",{parentName:"li"},"RGUserBot.cs")," and defines the main C# script entry points for your bot. This is used by the Regression Games SDK to launch and communicate with the bot.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The system requires the namespace of ",(0,r.kt)("inlineCode",{parentName:"li"},"BotEntryPoint.cs")," and all other ",(0,r.kt)("inlineCode",{parentName:"li"},".cs")," files for your bot to be the same.  The namespace must follow one of the conventions listed below.  This is important so that different bots' namespaces do not conflict and so that the system knows the correct namespace to load each bot's code from.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The namespace can be ",(0,r.kt)("inlineCode",{parentName:"li"},"{botName}_{botId}"),", where negative botIds have replaced the ",(0,r.kt)("inlineCode",{parentName:"li"},"-")," sign with the letter ",(0,r.kt)("inlineCode",{parentName:"li"},"n"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"OR"))),(0,r.kt)("li",{parentName:"ul"},"The namespace can match the name of the folder the bot is in")))))),(0,r.kt)("p",null,"You may add as many additional scripts or dependencies to your bot as necessary, but the 2 files above MUST exist for your bot to work correctly."),(0,r.kt)("h2",{id:"bot-configuration"},"Bot Configuration"),(0,r.kt)("p",null,"Your Unity Integration allows flexibility in how your GameObjects are set up, spawned into the scene, and torn down.\nThe first step to writing your C# Bot is defining how these processes should handle this Bot."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ConfigureBot(RG rgObject)")," method accepts an ",(0,r.kt)("inlineCode",{parentName:"p"},"RG")," object which is provided by Regression Games.\nThis object exposes configuration options (defined in the sections below) and methods for describing Bot behaviors and validations.\nImplementing the ",(0,r.kt)("inlineCode",{parentName:"p"},"ConfigureBot")," method is optional, but should be implemented when you want to configure your bot before processing the first tick."),(0,r.kt)("p",null,"For spawnable Bots, ",(0,r.kt)("inlineCode",{parentName:"p"},"rgObject.CharacterConfig")," is an object containing character configurations to help seat your Bot as the appropriate class/prefab/etc.\nThis is a freeform object to be interpreted by your game's implementation of the\n",(0,r.kt)("a",{parentName:"p",href:"../../integrating-with-unity/seating-and-spawning-bots#public-virtual-void-seatbotbotinformation-bottospawn"},(0,r.kt)("inlineCode",{parentName:"a"},"RGBotSpawnManager.SeatBot")),"\nand ",(0,r.kt)("a",{parentName:"p",href:"../../integrating-with-unity/seating-and-spawning-bots#canbenull-public-abstract-gameobject-spawnbotbool-latejoin-botinformation-botinformation"},(0,r.kt)("inlineCode",{parentName:"a"},"RGSpawnManager.SpawnBot"))," interfaces."),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"character_config_simple",label:"Simple definition",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'public override void ConfigureBot(RG rgObject)\n{\n    rgObject.CharacterConfig = new Dictionary<string, object>() {\n        { "type", "Mage" }\n    };\n}\n'))),(0,r.kt)(i.Z,{value:"character_type_freeform",label:"Complex definition",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'\npublic override void ConfigureBot(RG rgObject)\n{\n    rgObject.CharacterConfig = new Dictionary<string, object>() {\n        { "role", "Warrior" },\n        { "specialization", "Reaver" },\n        { "startingEquipment", new Dictionary<string, object>()\n            {\n                { "mainHand", "Sword" },\n                { "offHand", "Sword" }\n            }\n        },\n        { "spawn", "BlueTower" },\n        { "maxHP", 50 },\n        { "immunities", new string[] { "fire" } }\n    };\n}\n')))),(0,r.kt)("h3",{id:"isspawnable"},(0,r.kt)("inlineCode",{parentName:"h3"},"IsSpawnable")),(0,r.kt)("p",null,"Specifies whether this Bot should be represented by a visible GameObject.\nBots that simulate players or NPCs are generally spawnable, while Bots that interact with menus,\nrepresent environmental hazards, observe the game state without interaction, etc. are not."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"protected override bool GetIsSpawnable()\n{\n    return true;\n}\n")),(0,r.kt)("h3",{id:"botlifecycle"},(0,r.kt)("inlineCode",{parentName:"h3"},"BotLifecycle")),(0,r.kt)("p",null,"Bots can be either ",(0,r.kt)("inlineCode",{parentName:"p"},"MANAGED")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"PERSISTENT"),".\nA ",(0,r.kt)("inlineCode",{parentName:"p"},"MANAGED")," Bot will automatically disconnect when ",(0,r.kt)("inlineCode",{parentName:"p"},"RGBotServerListener.GetInstance()?.StopGame()")," is called from the Unity Integration.\nA ",(0,r.kt)("inlineCode",{parentName:"p"},"PERSISTENT")," Bot must either terminate itself (see ",(0,r.kt)("a",{parentName:"p",href:"adaptive-bots#complete"},"complete()"),") when its tasks are complete or be terminated manually from the RG Overlay.\nThis allows ",(0,r.kt)("inlineCode",{parentName:"p"},"PERSISTENT")," bots to stay active across multiple scenes/sessions. "),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"managed_bot",label:"Managed",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"protected override RGBotLifecycle GetBotLifecycle()\n{\n    return RGBotLifecycle.MANAGED;\n}\n"))),(0,r.kt)(i.Z,{value:"persistent_bot",label:"Persistent",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"protected override RGBotLifecycle GetBotLifecycle()\n{\n    return RGBotLifecycle.PERSISTENT;\n}\n")))))}b.isMDXComponent=!0}}]);