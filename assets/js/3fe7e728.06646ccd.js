"use strict";(self.webpackChunkregression_docs=self.webpackChunkregression_docs||[]).push([[2069],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=i,h=d["".concat(c,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),i=n(6010);const r={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r.tabItem,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(7462),i=n(7294),r=n(6010),o=n(2466),s=n(6550),c=n(1980),l=n(7392),u=n(12);function d(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function p(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,l.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c._X)(r),(0,i.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=p(e),[o,s]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[c,l]=h({queryString:n,groupId:a}),[d,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,u.Nk)(n);return[a,(0,i.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),g=(()=>{const e=c??d;return m({value:e,tabValues:r})?e:null})();(0,i.useLayoutEffect)((()=>{g&&s(g)}),[g]);return{selectedValue:o,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),l(e),f(e)}),[l,f,r]),tabValues:r}}var g=n(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:s,selectValue:c,tabValues:l}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),p=e=>{const t=e.currentTarget,n=u.indexOf(t),a=l[n].value;a!==s&&(d(t),c(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},l.map((e=>{let{value:t,label:n,attributes:o}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:p},o,{className:(0,r.Z)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":s===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function k(e){const t=f(e);return i.createElement("div",{className:(0,r.Z)("tabs-container",b.tabList)},i.createElement(y,(0,a.Z)({},e,t)),i.createElement(v,(0,a.Z)({},e,t)))}function w(e){const t=(0,g.Z)();return i.createElement(k,(0,a.Z)({key:String(t)},e))}},4228:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var a=n(7462),i=(n(7294),n(3905)),r=n(4866),o=n(5162);const s={sidebar_label:"Defining Actions"},c="Defining Actions",l={unversionedId:"integrating-with-unity/defining-actions",id:"integrating-with-unity/defining-actions",title:"Defining Actions",description:'This section refers to an "action" as any instruction that a bot can issue to its GameObject.',source:"@site/docs/integrating-with-unity/defining-actions.mdx",sourceDirName:"integrating-with-unity",slug:"/integrating-with-unity/defining-actions",permalink:"/integrating-with-unity/defining-actions",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Defining Actions"},sidebar:"unitySidebar",previous:{title:"Defining Entities and their States",permalink:"/integrating-with-unity/defining-entities-and-their-states"},next:{title:"BotInformation",permalink:"/integrating-with-unity/BotInformation"}},u={},d=[{value:"Using the <code>RGAction</code> Attribute",id:"using-the-rgaction-attribute",level:2},{value:"Assigning Actions to GameObjects",id:"assigning-actions-to-gameobjects",level:2}],p={toc:d},m="wrapper";function h(e){let{components:t,...s}=e;return(0,i.kt)(m,(0,a.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"defining-actions"},"Defining Actions"),(0,i.kt)("p",null,'This section refers to an "action" as any instruction that a bot can issue to its GameObject.\nThis can be anything from movement to casting abilities to navigating UI components.'),(0,i.kt)("p",null,"It is common for actions to interact with entities in the ",(0,i.kt)("a",{parentName:"p",href:"./defining-entities-and-their-states"},"game state")," and their corresponding GameObjects.\nThe ",(0,i.kt)("a",{parentName:"p",href:"../creating-bots/csharp/utilities#rgfindutils"},(0,i.kt)("inlineCode",{parentName:"a"},"RGFindUtils"))," class contains utility functions for finding such GameObjects within the scene and is\nuseful for these types of actions."),(0,i.kt)("h2",{id:"using-the-rgaction-attribute"},"Using the ",(0,i.kt)("inlineCode",{parentName:"h2"},"RGAction")," Attribute"),(0,i.kt)("p",null,"Defining an action is as simple as adding the ",(0,i.kt)("inlineCode",{parentName:"p"},"RGAction")," attribute to a method.\nThis allows the Regression Games SDK to recognize this method as the entrypoint into a callable action from your bot code (",(0,i.kt)("a",{parentName:"p",href:"../creating-bots/csharp/configuration"},"C#"),") (",(0,i.kt)("a",{parentName:"p",href:"../creating-bots/javascript/configuration"},"JavaScript"),")."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("inlineCode",{parentName:"p"},"RGAction")," attribute must be used within a component, a class that inherits from ",(0,i.kt)("inlineCode",{parentName:"p"},"MonoBehavior"),", or a class whose parent inherits from ",(0,i.kt)("inlineCode",{parentName:"p"},"MonoBehavior"),".")),(0,i.kt)("p",null,"By default, the action's name matches the method's, but this can be overridden by passing a different name to ",(0,i.kt)("inlineCode",{parentName:"p"},"RGAction"),".\nAction names must be unique within your Unity project."),(0,i.kt)("p",null,"Any parameters that the method accepts will be valid arguments in your bot code.\nArgument names and data types in the bot code must match those expected by the action."),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"action_with_default_name",label:"RGAction",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},'// This is called using the name "OpenContainer"\n\n[RGAction]\npublic void OpenContainer(bool isLocked)\n{\n    // Your logic here\n}\n'))),(0,i.kt)(o.Z,{value:"action_with_name",label:"RGAction with Overridden Name",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},'// This is called using the name "Open Chest"\n\n[RGAction("Open Chest")]\npublic void OpenContainer(bool isLocked)\n{\n    // Your logic here\n}\n')))),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"RGAction")," attribute is designed for ease of integration.\nA method with this attribute may execute an action from start to finish, or it may start an action that ",(0,i.kt)("inlineCode",{parentName:"p"},"MonoBehavior")," methods such as ",(0,i.kt)("inlineCode",{parentName:"p"},"FixedUpdate")," should complete.\nDepending on how your code is structured, you may be able to add the ",(0,i.kt)("inlineCode",{parentName:"p"},"RGAction")," attribute to your existing code with minimal refactoring."),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"complete_action",label:"RGAction Completes the Action",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},"public class Player : MonoBehavior\n{\n    public float jumpPower = 10f;\n    private RigidBody _rigidbody;\n\n    void Start()\n    {\n        _rigidbody = GetComponent<Rigidbody>();\n    }\n\n    [RGAction]\n    public void Jump()\n    {\n        _rigidbody.AddForce(Vector3.up * jumpPower, ForceMode.Impulse);\n    }\n}\n"))),(0,i.kt)(o.Z,{value:"action_with_update",label:"RGAction Starts the Action",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},"public class Player : MonoBehavior\n{\n    public float speed = 100f;\n    public float range = 1f;\n    private RigidBody _rigidbody;\n    private Vector3? _targetPosition;\n\n    void Start()\n    {\n        _rigidbody = GetComponent<Rigidbody>();\n    }\n\n    public void Update()\n    {\n        // If we are in range, reset the action\n        if (targetPosition != null && Vector3.Distance((Vector3) targetPosition, transform.position) < range)\n        {\n            targetPosition = null;\n        }\n\n        // Set the target velocity\n        if (targetPosition != null)\n        {\n            Vector3 direction = ((Vector3)targetPosition - transform.position).normalized;\n            direction.y = 0;\n            float force = speed * Time.deltaTime;\n            _rigidbody.AddForce(direction * force);\n        }\n    }\n\n    [RGAction]\n    public void MoveToPosition(float x, float y, float z)\n    {\n        targetPosition = new Vector3(x, y, z);\n    }\n}\n")))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"We recommend using primitive data types for ",(0,i.kt)("inlineCode",{parentName:"p"},"RGAction")," parameters.\nFull support for non-primitive types is coming soon.\nIf your method requires non-primitive parameters, consider using a proxy method:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-cs"},"// Proxy method for the AttackPlayer action\n[RGAction]\npublic void AttackPlayerProxy(int playerId)\n{\n    var player = RGFindUtils.Instance.FindOneByInstanceId<RGState>(playerId);\n    AttackPlayer(player.gameObject);\n}\n\n// The method we want to expose as an action\nprivate void AttackPlayer(GameObject player)\n{\n  // your implementation here...\n}\n"))),(0,i.kt)("h2",{id:"assigning-actions-to-gameobjects"},"Assigning Actions to GameObjects"),(0,i.kt)("p",null,"The Regression Games SDK relies on generated files to help translate commands sent from your bot into the correct actions within your Unity project.\nWhenever you add, remove, or modify actions, you will need to instruct the SDK to generate new scripts by opening the ",(0,i.kt)("inlineCode",{parentName:"p"},"Regression Games"),' dropdown and selecting "Generate Action Classes".'),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Generate Action Classes",src:n(7138).Z,width:"1380",height:"398"})),(0,i.kt)("p",null,"This should result in a unique generated script for each action you've defined using the ",(0,i.kt)("inlineCode",{parentName:"p"},"RGAction")," attribute.\nYou can find these files in your Unity project under ",(0,i.kt)("inlineCode",{parentName:"p"},"RegressionGames/Runtime/GeneratedScripts/RGActions"),".\nEach of these scripts can then be added as components to the appropriate GameObjects within your scene.\nWhen assigning action scripts to a GameObject, make sure that GameObject has all of the components that the action references."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Add Action Script to GameObject",src:n(743).Z,width:"814",height:"678"})),(0,i.kt)("p",null,"If your bot code attempts to call an action whose script is not assigned to its GameObject,\nthen the Regression Games SDK will ignore that command and continue executing your bot code as if the action was not called."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Be mindful when removing the ",(0,i.kt)("inlineCode",{parentName:"p"},"RGAction")," attribute from a method, or deleting an action altogether -\nthis may result in GameObjects missing the corresponding action script the next time you Generate Action Classes.")))}h.isMDXComponent=!0},743:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/add-action-script-to-game-object-774b818cd9af8af696b6406436d45eab.png"},7138:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/generate-action-classes-625f45664ad37a492051f07cc6eff185.png"}}]);