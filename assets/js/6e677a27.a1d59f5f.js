"use strict";(self.webpackChunkregression_docs=self.webpackChunkregression_docs||[]).push([[851],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=i,h=p["".concat(l,".").concat(d)]||p[d]||m[d]||o;return n?a.createElement(h,r(r({ref:t},c),{},{components:n})):a.createElement(h,r({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,r[1]=s;for(var u=2;u<o;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3906:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const o={sidebar_label:"Bot Actions"},r="Bot Actions",s={unversionedId:"core-concepts/bot-sequences/actions",id:"core-concepts/bot-sequences/actions",title:"Bot Actions",description:"Bot Actions are the core pieces of logic that drive behavior within a segment of your test sequence. Actions",source:"@site/docs/core-concepts/bot-sequences/actions.mdx",sourceDirName:"core-concepts/bot-sequences",slug:"/core-concepts/bot-sequences/actions",permalink:"/core-concepts/bot-sequences/actions",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Bot Actions"},sidebar:"unitySidebar",previous:{title:"End Criteria",permalink:"/core-concepts/bot-sequences/end-criteria"},next:{title:"Validation Suites",permalink:"/core-concepts/validation-suites"}},l={},u=[{value:"Structure of a Bot Action",id:"structure-of-a-bot-action",level:2},{value:"Action Types",id:"action-types",level:2},{value:"InputPlayback",id:"inputplayback",level:3},{value:"Behaviour",id:"behaviour",level:3},{value:"MonkeyBot",id:"monkeybot",level:3},{value:"Mouse_CVImage",id:"mouse_cvimage",level:3},{value:"Mouse_CVText",id:"mouse_cvtext",level:3},{value:"Mouse_ObjectDetection",id:"mouse_objectdetection",level:3},{value:"RestartGame",id:"restartgame",level:3},{value:"QuitGame",id:"quitgame",level:3}],c={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"bot-actions"},"Bot Actions"),(0,i.kt)("p",null,"Bot Actions are the core pieces of logic that drive behavior within a segment of your test sequence. Actions\ncan range from simple operations like clicking or keypresses, to more complex operations like clicking on\nan object in the scene using computer vision."),(0,i.kt)("h2",{id:"structure-of-a-bot-action"},"Structure of a Bot Action"),(0,i.kt)("p",null,"Bot Actions are defined in Bot Segments within the ",(0,i.kt)("inlineCode",{parentName:"p"},"botAction")," field. A segment may only contain one bot action."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'// Segment structure\n{\n    "name": "Click the play button",\n    "description": "Clicks the play button in the main menu",\n    "endCriteria": [...],\n    "botAction": {\n        "type": ..., // The type of action to be taken, as a string\n        "data": {\n            ... // The data for the action, as a JSON object\n        }\n    }\n}\n')),(0,i.kt)("p",null,"A bot action has a ",(0,i.kt)("inlineCode",{parentName:"p"},"type")," and a ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," field. The ",(0,i.kt)("inlineCode",{parentName:"p"},"type")," indicates the type of action to be taken, and the ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," field contains\nthe parameters for that action. For example, a bot action to click on a coordinate may look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "Click the play button",\n    "description": "Clicks the play button in the main menu",\n    "endCriteria": [...],\n    "botAction": {\n        "type": "InputPlayback",\n        "data": {\n            "startTime": 0.0,\n            "inputData": {\n                "keyboard": [],\n                "mouse": [\n                    {\n                        "apiVersion": 1,\n                        "startTime": 0.0, // This is the time offset at which the action should be performed\n                        "screenSize": {"x": 1920, "y": 1080},\n                        "position": {"x": 907, "y": 796}, // This is the location to click\n                        "worldPosition": null,\n                        "leftButton": true, // This indicates that the left mouse button should be pressed\n                        "middleButton": false,\n                        "rightButton": false,\n                        "forwardButton": false,\n                        "backButton": false,\n                        "scroll": {"x": 0, "y": 0},\n                        "clickedObjectNormalizedPaths": []\n                    }\n                ]\n            }\n        }\n    }\n}\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"There are additional fields that can be set on a bot action and many of these ",(0,i.kt)("inlineCode",{parentName:"p"},"inputData")," fields, such as an apiVersion. You can see the full\nspecification in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Regression-Games/RGUnityBots/blob/cd68ed0f4b10567eb652477717338d92b4f4571e/src/gg.regression.unity.bots/Runtime/Scripts/StateRecorder/BotSegments/Models/BotAction.cs"},"source code"),".")),(0,i.kt)("h2",{id:"action-types"},"Action Types"),(0,i.kt)("p",null,"There are many different types of actions that can be used in a bot segment, each useful in their own way.\nThe list of supported types are as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"InputPlayback"),": This action plays back a series of mouse and keyboard inputs."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Behaviour"),": This action runs a MonoBehaviour for a given amount of time."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MonkeyBot"),": This action runs a chaos monkey bot for a given amount of time."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Mouse_CVImage"),": This action clicks on a region of the screen based on a template image found using computer vision."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Mouse_CVText"),": This action clicks on a region of the screen based on text found using computer vision."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Mouse_ObjectDetection"),": This action clicks on a region of the screen based on an object found using computer vision."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"RestartGame"),": This action restarts the game."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"QuitGame"),": This action quits the game.")),(0,i.kt)("h3",{id:"inputplayback"},"InputPlayback"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"InputPlayback")," action type plays back a sequence of mouse and keyboard inputs. This can be useful for\nreplaying a sequence of static actions that were previously recorded as part of a play through."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Data Format")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"type")," is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"InputPlayback"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'// The `botAction.data` format\n{\n    "startTime": 0.0, // The time offset at which the action should be performed from the start of the segment\n    "inputData": {\n        "mouse": [ // Any number of mouse inputs can be provided\n            {\n                "startTime": ..., // A number indicating the time offset at which the action should be performed from the start of the segment (in seconds)\n                "screenSize": {"x": ..., "y": ...}, // A width and height indicating the size of the screen, which is used to linearly scale the position of the mouse when the screen size is different from the screen size at the time the inputs were recorded\n                "position": {"x": ..., "y": ...}, // A coordinate indicating the position to click, where X and Y are integers\n                "worldPosition": null, // An optional coordinate indicating the position to click in world space, which is often null.\n                "leftButton": ..., // A boolean indicating whether the left mouse button should be pressed\n                "middleButton": ..., // A boolean indicating whether the middle mouse button should be pressed\n                "rightButton": ..., // A boolean indicating whether the right mouse button should be pressed\n                "forwardButton": ..., // A boolean indicating whether the forward mouse button should be pressed\n                "backButton": ..., // A boolean indicating whether the back mouse button should be pressed\n                "scroll": {"x": ..., "y": ...}, // An optional scroll amount, where X and Y are integers\n                "clickedObjectNormalizedPaths": [...], // An optional list of normalized paths to the objects that were clicked. This is used to adjust the click coordinates when there are variances in resolution scaling or object position between runs.\n            }\n        ],\n        "keyboard": [ // Any number of keyboard inputs can be provided\n            {\n                "startTime": ..., // A number indicating the time offset at which the action should be performed from the start of the segment (in seconds)\n                "endTime": ..., // A number indicating the time offset at which the action should be stopped from the start of the segment (in seconds)\n                "binding": ..., // A sting representing the binding to be pressed\n            }\n        ]\n    }\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Notes")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You can use the ",(0,i.kt)("inlineCode",{parentName:"li"},"startTime")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"endTime")," fields to control the timing of actions. For instance, you can hold shift and press a key to result in a capital letter."),(0,i.kt)("li",{parentName:"ul"},"If two actions have the same ",(0,i.kt)("inlineCode",{parentName:"li"},"startTime"),", the action that appears earlier in the list will be performed first."),(0,i.kt)("li",{parentName:"ul"},"You can omit an ",(0,i.kt)("inlineCode",{parentName:"li"},"endTime")," of a keyboard action to have that action continue until it is disabled by a future action which only sets the ",(0,i.kt)("inlineCode",{parentName:"li"},"endTime"),"."),(0,i.kt)("li",{parentName:"ul"},"The available keys to press in keyboard actions can be found ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/Regression-Games/RGUnityBots/blob/cd68ed0f4b10567eb652477717338d92b4f4571e/src/gg.regression.unity.bots/Runtime/Scripts/StateRecorder/KeyboardInputActionObserver.cs#L25-L151"},"here"),". The bindings should take the format of ",(0,i.kt)("inlineCode",{parentName:"li"},"<Keyboard>/keyname"),"."),(0,i.kt)("li",{parentName:"ul"},"It is best practice to move the mouse to the desired position before clicking. Without this, Unity's input handling can cause unexpected behaviour with the click, especially when the prior mouse position was over a different input component in the UI.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},'Example: Typing "Hello"')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "Type \'Hello\'",\n    "description": "Types \'Hello\' using the keyboard",\n    "endCriteria": [...],\n    "botAction": {\n        "type": "InputPlayback",\n        "data": {\n            "startTime":0.0,\n            "inputData": {\n                "keyboard": [\n\n                    {"startTime":0.0,"binding":"<Keyboard>/leftShift"},\n                    {"startTime":0.0,"endTime":0.0,"binding":"<Keyboard>/h"},\n                    {"endTime":0.0,"binding":"<Keyboard>/leftShift"},\n\n                    {"startTime":0.0,"endTime":0.0,"binding":"<Keyboard>/e"},\n                    {"startTime":0.0,"endTime":0.0,"binding":"<Keyboard>/l"},\n                    {"startTime":0.0,"endTime":0.0,"binding":"<Keyboard>/l"},\n                    {"startTime":0.0,"endTime":0.0,"binding":"<Keyboard>/o"}\n\n                ],\n                "mouse":[]\n            }\n        }\n    }\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example: Moving and clicking the mouse")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "Move and click the mouse",\n    "description": "Moves the mouse to a position and clicks it",\n    "endCriteria": [...],\n    "botAction": {\n        "type": "InputPlayback",\n        "data": {\n            "startTime": 0.0,\n            "inputData": {\n                "keyboard": [],\n                "mouse": [\n                    // Note that the mouse is moved to the desired position before the click. This is best practice to avoid unexpected behaviour with the click, especially when the prior mouse position was over a different input component in the UI.\n                    {"startTime":0.0,"screenSize":{"x":1920,"y":1080},"position":{"x":942,"y":500},"worldPosition":null,"leftButton":false,"middleButton":false,"rightButton":false,"forwardButton":false,"backButton":false,"scroll":{"x":0,"y":0},"clickedObjectNormalizedPaths":["UI Canvas/Start Button"]},\n                    {"startTime":0.1,"screenSize":{"x":1920,"y":1080},"position":{"x":942,"y":500},"worldPosition":null,"leftButton":true,"middleButton":false,"rightButton":false,"forwardButton":false,"backButton":false,"scroll":{"x":0,"y":0},"clickedObjectNormalizedPaths":["UI Canvas/Start Button"]},\n                    // Release the left mouse button\n                    {"startTime":0.2,"screenSize":{"x":1920,"y":1080},"position":{"x":942,"y":500},"worldPosition":null,"leftButton":false,"middleButton":false,"rightButton":false,"forwardButton":false,"backButton":false,"scroll":{"x":0,"y":0},"clickedObjectNormalizedPaths":["UI Canvas/Start Button"]}\n                ]\n            }\n        }\n    }\n}\n')),(0,i.kt)("h3",{id:"behaviour"},"Behaviour"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Behaviour")," action type runs a MonoBehaviour. This can be useful for running agent code that relies on\nparticular data and information from the code of your game, such as tapping into an existing navigation system."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Data Format")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"type")," is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"Behaviour"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'// The `botAction.data` format\n{\n    "behaviourFullName": "...", // The full qualified class path of the MonoBehaviour to run\n    "maxRuntimeSeconds": ... // The maximum amount of time to run the behaviour for in seconds before it is stopped\n}\n')),(0,i.kt)("p",null,"The Behaviour itself needs to be defined in the codebase of your game where it can be found during runtime. It should be\na class that inherits from ",(0,i.kt)("inlineCode",{parentName:"p"},"MonoBehaviour"),". In order to terminate the behaviour, you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"Destroy(this)")," to destroy the\nbehaviour instance. The ",(0,i.kt)("inlineCode",{parentName:"p"},"Update")," loop of your behaviour will run as normal until either it is destroyed by your implementation or\nthe time limit is reached (",(0,i.kt)("inlineCode",{parentName:"p"},"maxRuntimeSeconds"),"), at which point the SDK will destroy it automatically."),(0,i.kt)("p",null,"To take full advantage of our toolset, the behaviour can optionally implement ",(0,i.kt)("inlineCode",{parentName:"p"},"IRGBotSegmentActionBehaviour"),", which permits a pausing strategy to be used when a developer\npauses the segment in the middle of a run."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"namespace RegressionGames.StateRecorder.Types\n{\n    /**\n     * <summary>An interface that MonoBehaviours used as actions in RG BotSegments MAY implement to provide pause / un-pause functionality during Bot Segment evaluation.\n     * Implementing this interface is not required for the behaviour action to run, only for it to support pause / un-pause.</summary>\n     */\n    public interface IRGBotSegmentActionBehaviour\n    {\n        /**\n         * <summary>Called by Regression Games Bot Segment processing to indicate that the user has paused the playback of the bot segments.\n         * This should normally be implemented by setting a boolean to true and checking that boolean at the start of your Update loop to block execution when paused.</summary>\n         */\n        public void PauseAction();\n\n        /**\n         * <summary>Called by Regression Games Bot Segment processing to indicate that the user has un-paused the playback of the bot segments.\n         * This should normally be implemented by setting a boolean to false and checking that boolean at the start of your Update loop to allow execution when un-paused.</summary>\n         */\n        public void UnPauseAction();\n    }\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example: Running a pathfinding behaviour for at max 30 seconds")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"// The monobehaviour code contained somewhere in your game runtime code\nusing UnityEngine;\nusing UnityEngine.AI;\n\nnamespace RG.Example {\n\n    public class NavigateToPosition : MonoBehaviour, IRGBotSegmentActionBehaviour\n    {\n        private NavMeshAgent agent;\n        private bool isPaused = false;\n        public Vector3 targetPosition;\n\n        private void Start()\n        {\n            agent = GetComponent<NavMeshAgent>();\n            if (agent != null)\n            {\n                agent.SetDestination(targetPosition);\n            }\n        }\n\n        public void PauseAction() {\n            isPaused = true;\n        }\n\n        public void UnPauseAction() {\n            isPaused = false;\n        }\n\n        private void Update()\n        {\n            if (agent != null && !agent.pathPending && !isPaused)\n            {\n                if (agent.remainingDistance <= agent.stoppingDistance)\n                {\n                    if (!agent.hasPath || agent.velocity.sqrMagnitude == 0f)\n                    {\n                        Destroy(this);\n                    }\n                }\n            }\n        }\n    }\n}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "Run pathfinding behaviour",\n    "description": "Runs a pathfinding behaviour to navigate to a position",\n    "endCriteria": [...],\n    "botAction": {\n        "type": "Behaviour",\n        "data": {\n            "behaviourFullName": "RG.Example.NavigateToPosition",\n            "maxRuntimeSeconds": 30.0\n        }\n    }\n}\n')),(0,i.kt)("h3",{id:"monkeybot"},"MonkeyBot"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"MonkeyBot")," action type runs a chaos monkey bot for a given amount of time. This can be useful for testing the robustness of your game.\nThis Monkey Bot will randomly select actions to perform from a list of possible actions, and will perform them at a given interval. These\nactions are found via a code analysis of the game, which must be run before you use this segment type."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Setup")),(0,i.kt)("p",null,"In order to setup the monkey bot, you need to run a code analysis of the game. This can be done from the ",(0,i.kt)("strong",{parentName:"p"},"Regression Games > Configure Bot Actions")," menu."),(0,i.kt)("p",null,'Once you click that menu option, a panel will appear. Click the "Analyze Actions" button, which will perform an analysis of your game and\nfind all the possible actions that can be taken. Once this is done, you can use the monkey bot in your bot segments.'),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"The actions found in the panel can be checked and unchecked by clicking on them. However, the SDK will ",(0,i.kt)("strong",{parentName:"p"},"not use these settings automatically in Monkey bots\nrun in a bot segment"),". You can use the panel to configure which actions to run, but you then should open the ",(0,i.kt)("inlineCode",{parentName:"p"},"Assets/Resources/RGActionManagerSettings.txt"),"\nfile, copy the settings from there, and paste them into your botAction's ",(0,i.kt)("inlineCode",{parentName:"p"},"actionSettings")," field. This manual process will be addressed in a future release!")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Data Format")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"type")," is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"MonkeyBot"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'// The `botAction.data` format\n{\n    "actionInterval": ... // The interval between actions in seconds,\n    "actionSettings": {\n        "DisabledActionPaths": [\n            ... // An optional list of strings of the format "Game Object Path/Method Path" to disable from the monkey bot\n        ]\n    }\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example: Running a monkey bot to click on random objects while ignoring the quit actions")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "Run monkey bot",\n    "description": "Runs a monkey bot to click on random objects while ignoring the quit actions",\n    "endCriteria": [...],\n    "botAction": {\n        "type": "MonkeyBot",\n        "data": {\n            "actionInterval": 0.5,\n            "actionSettings": {\n                "DisabledActionPaths": [\n                    // These paths can be seen after deselecting options in the Action Analysis panel and then opening the `Assets/Resources/RGActionManagerSettings.txt` file\n                    "Unity UI/Button/Unity.Multiplayer.Samples.BossRoom.Visual.UISettingsCanvas.OnClickQuitButton",\n                    "Unity UI/Button/Unity.Multiplayer.Samples.BossRoom.Debug.DebugCheatsManager.GoToPostGame"\n                ]\n            }\n        }\n    }\n}\n')),(0,i.kt)("h3",{id:"mouse_cvimage"},"Mouse_CVImage"),(0,i.kt)("p",null,"This action type clicks on a region of the screen based on a template image found using computer vision. This is useful for\nclicking on certain icons or objects that may have dynamic positions or are changing often during development."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Data Format")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"type")," is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"Mouse_CVImage"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"imageData")," - The image data in one of the following formats...",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The base64 encoded string of the JPG image data - This must be the entire JPG image file, not just the visible bytes."),(0,i.kt)("li",{parentName:"ul"},"A file:// path to a JPG or PNG image - Be careful when using relative paths as these will be interpreted differently in the Editor vs Runtime builds."),(0,i.kt)("li",{parentName:"ul"},"A resource:// path to a READABLE Texture2D in one of your project's Resources folders."),(0,i.kt)("li",{parentName:"ul"},"A resource:// path to a .bytes TextAsset in one of your project's Resources folders that is a JPG or PNG file saved with a .bytes file extension.  This can be used if you do not want Unity to import your image as a Texture."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"withinRect")," - An optional (can be null/undefined) field to limit the search area to a specific pixel region of the current frame.  The SDK will linearly tranform the supplied ",(0,i.kt)("inlineCode",{parentName:"li"},"rect")," to fit the current resolution using the ",(0,i.kt)("inlineCode",{parentName:"li"},"screenSize")," as the initial reference resolution.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"screenSize")," - The reference resolution in pixels which defines the screen space that ",(0,i.kt)("inlineCode",{parentName:"li"},"rect")," is defined within."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rect")," - The position (x=0, y=0 is bottom left) and size (width, height) of the rectangle that must contain the supplied image data.  The values are defined in pixels."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"actions")," - The list of mouse actions to take at the center point of the returned ",(0,i.kt)("inlineCode",{parentName:"li"},"rect"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Notes")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"CVImage")," type is still in an experimental phase and may provide inconsistent or unexpected results in many situations."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The template image and screenshot to search within are ",(0,i.kt)("strong",{parentName:"li"},"converted to grayscale"),". If the object to search for exists in different colors, the algorithm cannot distinguish between them."),(0,i.kt)("li",{parentName:"ul"},"Multiple matches of the specified image within a frame may provide incorrect or inconsistent result bounds."),(0,i.kt)("li",{parentName:"ul"},"False positives or incorrect result bounds may occur if pixel regions similar to the specified image exist within a frame.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"How to get the data for the ",(0,i.kt)("inlineCode",{parentName:"strong"},"imageData")," field as a base64 encoded string")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Use a screenshot tool to capture the target area of your game and save this as a JPG file (PNG/BMP/etc are NOT supported at this time)."),(0,i.kt)("li",{parentName:"ol"},"Run one of the following commands to get the base64 encoded string of the image using the scripts in ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/Regression-Games/RGUnityBots/tree/main/user-tools"},"this directory"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"CURRENT_PATH> python encode_jpg_base64.py sample_images/tree.jpg\n/9j/4AAQ...<rest of the base64 encoded image data>...VLj3ieS/9k=\n")),(0,i.kt)("p",null,"or"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"CURRENT_PATH> ./encode_jpg_base64.sh sample_images/tree.jpg\n/9j/4AAQ...<rest of the base64 encoded image data>...VLj3ieS/9k=\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example: Using base64 byte[]")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "CV Image Action: Click Menu Change Profile Button",\n    "description": "Moves the mouse over the change profile button, then clicks and releases on the button. Criteria waits for the action to complete.",\n    "endCriteria": [...],\n    "botAction":{    \n        "type":"Mouse_CVImage",\n        "data": {\n            "imageData":"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",\n            "withinRect": null,\n            "actions": [\n                {"leftButton":false,"middleButton":false,"rightButton":false,"forwardButton":false,"backButton":false,"scroll":{"x":0.0,"y":0.0},"duration":2.0 },\n                {"leftButton":true,"middleButton":false,"rightButton":false,"forwardButton":false,"backButton":false,"scroll":{"x":0.0,"y":0.0} },\n                {"leftButton":false,"middleButton":false,"rightButton":false,"forwardButton":false,"backButton":false,"scroll":{"x":0.0,"y":0.0} }\n            ]\n        }\n    }\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example: Using resoure:// path (note that the ",(0,i.kt)("inlineCode",{parentName:"strong"},"sample_images")," folder must be under a Resources folder in your project)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "CV Image Action: Click Menu Change Profile Button",\n    "description":"Moves the mouse over the change profile button, then clicks and releases on the button. Criteria waits for the action to complete.",\n    "endCriteria": [...],\n    "botAction":{    \n        "type":"Mouse_CVImage",\n        "data": {\n            "imageData":"resource://sample_images/change_profile_button",\n            "withinRect": null,\n            "actions": [\n                {"leftButton":false,"middleButton":false,"rightButton":false,"forwardButton":false,"backButton":false,"scroll":{"x":0.0,"y":0.0},"duration":2.0 },\n                {"leftButton":true,"middleButton":false,"rightButton":false,"forwardButton":false,"backButton":false,"scroll":{"x":0.0,"y":0.0} },\n                {"leftButton":false,"middleButton":false,"rightButton":false,"forwardButton":false,"backButton":false,"scroll":{"x":0.0,"y":0.0} }\n            ]\n        }\n    }\n}\n')),(0,i.kt)("h3",{id:"mouse_cvtext"},"Mouse_CVText"),(0,i.kt)("p",null,"This action type clicks on a region of the screen based on where the specified text is found. This is useful for\nclicking on certain buttons or fields that may have dynamic positions or are changing often during development."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Data Format")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"type")," is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"Mouse_CVText"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"text")," - The text to find.  Note that this algorithm will treat this as a set of words to find, NOT a sentence.  Thus if you have 'Create New Profile' on a single line on one button, but have 'Create' 'New' 'Profile' each on a separate line in different screen area, the algorithm has to choose which one to select.  The current method is to select the smallest bounding area containing all required words that is also ",(0,i.kt)("inlineCode",{parentName:"li"},"withinRect")," (if specified)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"textMatchingRule")," - One of ",(0,i.kt)("inlineCode",{parentName:"li"},"Matches")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"Contains"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Matches")," - Each word in the provided ",(0,i.kt)("inlineCode",{parentName:"li"},"text")," must be found as a whole word in the results.  This is a very exact matching rule and can sometimes lead to inconsistent results in frames with poor in game lighting on the text or low text contrast."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Contains")," - Each word in the provided ",(0,i.kt)("inlineCode",{parentName:"li"},"text")," must be found as a part of a word in the results.  This is a looser matching rule and if often used instead of ",(0,i.kt)("inlineCode",{parentName:"li"},"Matches"),' for more stable results.  For example "Time" would match to "Timer", "Time", "Times", "Timed", etc in the frame.  This may not seem ideal, but in most game situations, the contrast or text layout isn\'t always clearly identifiable and extra or incorrect letters may consistently be found for the text you are looking for in a specific frame of the game.  When you encounter those situations, you can adjust your game to give better text clarity/contrast to your users and/or you can utilize ',(0,i.kt)("inlineCode",{parentName:"li"},"Contains")," instead of ",(0,i.kt)("inlineCode",{parentName:"li"},"Matches"),"."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"textCaseRule")," - One of ",(0,i.kt)("inlineCode",{parentName:"li"},"Matches")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"Ignore"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Matches")," - (NOT CURRENTLY SUPPORTED - See the Notes section below for details.) The result must match the case of the specified text exactly."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Ignore")," - The specified text is matched without considering capitalization.  This option should be used always."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"withinRect")," - An optional (can be null/undefined) field to limit the search area to a specific pixel region of the current frame.  The SDK will linearly tranform the supplied ",(0,i.kt)("inlineCode",{parentName:"li"},"rect")," to fit the current resolution using the ",(0,i.kt)("inlineCode",{parentName:"li"},"screenSize")," as the initial reference resolution.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"screenSize")," - The reference resolution in pixels which defines the screen space that ",(0,i.kt)("inlineCode",{parentName:"li"},"rect")," is defined within."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rect")," - The position (x=0, y=0 is bottom left) and size (width, height) of the rectangle that must contain the supplied text data.  The values are defined in pixels."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"actions")," - The list of mouse actions to take at the center point of the returned ",(0,i.kt)("inlineCode",{parentName:"li"},"rect"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Notes")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"CVText")," type is still in an experimental phase and may provide inconsistent or unexpected results in many situations."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"textCaseRule")," must always be set to ",(0,i.kt)("inlineCode",{parentName:"li"},"Ignore"),". This method does not currently consider capitalization in its results."),(0,i.kt)("li",{parentName:"ul"},"Text with low contrast relative to its background may not be detected or may detect incorrect characters"),(0,i.kt)("li",{parentName:"ul"},"Very small or very large text may not be detected or may detect incorrect characters"),(0,i.kt)("li",{parentName:"ul"},"Less common fonts may not be detected or may detect incorrect characters")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example: Click the Create New Profile button")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "CV Text Action: Click Create New Profile Button",\n    "description":"Moves the mouse over the Create New Profile button text, then clicks and releases on the button. Criteria waits for the action to complete.",\n    "endCriteria": [...],\n    "botAction":{    \n        "type":"Mouse_CVText",\n        "data": {\n            "type":"CVText",\n            "transient":true,\n            "data":{\n                "text":"CREATE NEW PROFILE",\n                "textMatchingRule":"Contains",\n                "textCaseRule":"Ignore"\n                "withinRect": {\n                    "screenSize":{"x": 1656, "y": 724},\n                    "rect":{"x": 900, "y": 110, "width": 350, "height": 50}\n                } \n            }\n            "actions": [\n                {"leftButton":false,"middleButton":false,"rightButton":false,"forwardButton":false,"backButton":false,"scroll":{"x":0.0,"y":0.0},"duration":2.0 },\n                {"leftButton":true,"middleButton":false,"rightButton":false,"forwardButton":false,"backButton":false,"scroll":{"x":0.0,"y":0.0} },\n                {"leftButton":false,"middleButton":false,"rightButton":false,"forwardButton":false,"backButton":false,"scroll":{"x":0.0,"y":0.0} }\n            ]\n        }\n    }\n}\n')),(0,i.kt)("h3",{id:"mouse_objectdetection"},"Mouse_ObjectDetection"),(0,i.kt)("p",null,"This action type clicks on a region of the screen based on where a queried object is detected, based on an image or text query. This is useful for\nclicking on certain objects that may not only have dynamic positions or are changing often during development, but whose visual appearance may also change often. "),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Data Format")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"type")," is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"Mouse_ObjectDetection"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Either imageQuery or textQuery can be specified, you can not use both.")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"imageQuery")," - The image describing the object to search for in the current frame.  The image data must be in one of the following formats...",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The base64 encoded string of the JPG image data - This must be the entire JPG image file, not just the visible bytes."),(0,i.kt)("li",{parentName:"ul"},"A file:// path to a JPG or PNG image - Be careful when using relative paths as these will be interpreted differently in the Editor vs Runtime builds."),(0,i.kt)("li",{parentName:"ul"},"A resource:// path to a READABLE Texture2D in one of your project's Resources folders."),(0,i.kt)("li",{parentName:"ul"},"A resource:// path to a .bytes TextAsset in one of your project's Resources folders that is a JPG or PNG saved with a .bytes file extension.  This can be used if you do not want Unity to import your image as a Texture."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"textQuery")," - The string describing the object to search for in the current frame."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"threshold")," - An optional (can be null/undefined) field to accept a returned match from the object detection model. Returned matches with a confidence score less than this threshold are ignored. Currently, this is only supported for usage with ",(0,i.kt)("inlineCode",{parentName:"li"},"textQuery"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"withinRect")," - An optional (can be null/undefined) field to limit the search area to a specific pixel region of the current frame.  The SDK will linearly transform the supplied ",(0,i.kt)("inlineCode",{parentName:"li"},"rect")," to fit the current resolution using the ",(0,i.kt)("inlineCode",{parentName:"li"},"screenSize")," as the initial reference resolution.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"screenSize")," - The reference resolution in pixels which defines the screen space that ",(0,i.kt)("inlineCode",{parentName:"li"},"rect")," is defined within."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rect")," - The position (x=0, y=0 is bottom left) and size (width, height) of the rectangle that must contain the supplied image data.  The values are defined in pixels."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"actions")," - The list of mouse actions to take at the center point of the returned ",(0,i.kt)("inlineCode",{parentName:"li"},"rect"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"How to get the data for the ",(0,i.kt)("inlineCode",{parentName:"strong"},"imageData")," field as a base64 encoded string")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Find the image you want to use as your query and save it as a JPG file (PNG/BMP/etc are NOT supported at this time).")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"encode_jpg_base64.py")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"encode_jpg_base64.sh")," script in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Regression-Games/RGUnityBots/tree/main/user-tools"},"this directory")," to encode the JPG as a base64 string.  The output will be written to STDOUT."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"}," CURRENT_PATH> python encode_jpg_base64.py sample_images/tree.jpg\n/9j/4AAQ...<rest of the base64 encoded image data>...VLj3ieS/9k=\n")),(0,i.kt)("p",null,"or"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"}," CURRENT_PATH> ./encode_jpg_base64.sh sample_images/tree.jpg\n/9j/4AAQ...<rest of the base64 encoded image data>...VLj3ieS/9k=\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Create a new bot segment json file and copy the base64 encoded output as the ",(0,i.kt)("inlineCode",{parentName:"li"},"imageQuery")," of your CVObjectDetection criteria.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Notes"),"\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"CVObjectDetection")," type is still in an experimental phase and may provide inconsistent or unexpected results in many situations."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Multiple matches of the specified object within a frame will only return one at random."),(0,i.kt)("li",{parentName:"ul"},"CVObjectDetection via ImageQuery has a very high false positive rate. We are continuing to evaluate and tune this type."),(0,i.kt)("li",{parentName:"ul"},"CVObjectDetection via ImageQuery selects the most common object in the query image. If the query image contains multiple objects, (such as a cat and a dog) it will only select one--whichever is more prominent.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example: Image query example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "CV Object Detection Action: Click on a tree using an image query",\n    "description":"Moves the mouse over the tree, then clicks and releases on the tree. Criteria waits for the action to complete.",\n    "endCriteria": [...],\n    "botAction":{    \n        "type":"Mouse_ObjectDetection",\n        "data": {\n            "imageQuery":"/9j/4AAQ...<rest of the base64 encoded image data>...VLj3ieS/9k=",\n            or\n            "imageQuery":"file://???/sample_images/tree.jpg",\n            or  \n            "imageQuery":"resource://sample_images/tree",\n            "actions": [\n                {"leftButton":false, "duration":0.1}, // Move the mouse to the center of the tree\n                {"leftButton":true, "duration":0.1},  // Click the left mouse button\n                {"leftButton":false, "duration":0.1}  // Release the left mouse button\n            ]\n        }\n    }\n}\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Using file:// path (??? represents the path to this folder on your system)"),(0,i.kt)("li",{parentName:"ul"},"Using resoure:// path (note that the ",(0,i.kt)("inlineCode",{parentName:"li"},"sample_images")," folder must be under a Resources folder in your project)")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example: Text query example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "CV Object Detection Action: Click on a tree using a text query",\n    "description":"Moves the mouse over the tree, then clicks and releases on the tree. Criteria waits for the action to complete.",\n    "endCriteria": [...],\n    "botAction":{    \n        "type":"Mouse_ObjectDetection",\n        "data": {\n            "textQuery": "Tree",\n            "threshold": 0.4,\n            "actions": [\n                {"leftButton":false, "duration":0.1},  // Move the mouse to the center of the tree\n                {"leftButton":true, "duration":0.1},   // Click the left mouse button\n                {"leftButton":false, "duration":0.1}   // Release the left mouse button\n            ]\n        }\n    }\n}\n')),(0,i.kt)("h3",{id:"restartgame"},"RestartGame"),(0,i.kt)("p",null,"This action type restarts the game. This should only be used as the 'last' segment in your sequence or segment list, and is useful for getting your game\nready for another test."),(0,i.kt)("p",null,"There is an interface you can implement to override the default behaviour of restarting the game. If this interface is not implemented when\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"RestartGame")," Bot Action is used in a build of your game ",(0,i.kt)("strong",{parentName:"p"},"outside the UnityEditor"),", then the default action will be to destroy all ",(0,i.kt)("inlineCode",{parentName:"p"},"DontDestroyOnLoad")," objects and call\n",(0,i.kt)("inlineCode",{parentName:"p"},"SceneManager.LoadScene(sceneBuildIndex: 0, mode: LoadSceneMode.Single)"),".  ",(0,i.kt)("strong",{parentName:"p"},"In the UnityEditor"),", the action will ",(0,i.kt)("strong",{parentName:"p"},"always")," be to stop and re-enter play mode;\nany override will not be used."),(0,i.kt)("p",null,"Implement the following interface to override the default behaviour:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"namespace StateRecorder.BotSegments.Models\n{\n    public interface IRGRestartGameAction\n    {\n        /**\n         * <summary>Implement this interface to provide an implementation of how to safely cleanup and restart your game.  If this interface is not implemented when RestartGame Bot Action is used in a build of your game outside the UnityEditor, then the default action will be to call SceneManager.LoadScene(sceneBuildIndex: 0, mode: LoadSceneMode.Single).  In the UnityEditor, the action will always be to stop and re-enter play mode; this interface will not be used.</summary>\n         */\n        public void RestartGame();\n    }\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Data Format")),(0,i.kt)("p",null,"There is no additional format for this action type."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example: Restart the game")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "Restart the game",\n    "description": "Restarts the game.",\n    "endCriteria": [...],\n    "botAction": {\n        "type":"RestartGame"\n    }\n}\n')),(0,i.kt)("h3",{id:"quitgame"},"QuitGame"),(0,i.kt)("p",null,"This action type quits the game. This should only be used as the 'last' segment in your sequence or segment list, and is useful for cleaning up after a test."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Data Format")),(0,i.kt)("p",null,"There is no additional format for this action type."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example: Quit the game")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "Quit the game",\n    "description": "Quits the game.",\n    "endCriteria": [...],\n    "botAction": {\n        "type":"QuitGame"\n    }\n}\n')))}m.isMDXComponent=!0}}]);