"use strict";(self.webpackChunkregression_docs=self.webpackChunkregression_docs||[]).push([[4703],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>f});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return a?n.createElement(f,o(o({ref:t},s),{},{components:a})):n.createElement(f,o({ref:t},s))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4208:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const i={sidebar_label:"BotInformation"},o="BotInformation",l={unversionedId:"studios/unity/unity-sdk/BotInformation",id:"studios/unity/unity-sdk/BotInformation",title:"BotInformation",description:"A serializable class holding information about a bot that has been connected to the scene",source:"@site/docs/studios/unity/unity-sdk/BotInformation.mdx",sourceDirName:"studios/unity/unity-sdk",slug:"/studios/unity/unity-sdk/BotInformation",permalink:"/studios/unity/unity-sdk/BotInformation",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"BotInformation"},sidebar:"studiosSidebar",previous:{title:"RGBotSpawnManager",permalink:"/studios/unity/unity-sdk/RGBotSpawnManager"},next:{title:"RGState",permalink:"/studios/unity/unity-sdk/RGState"}},p={},c=[{value:"Properties",id:"properties",level:2},{value:"Class Methods",id:"class-methods",level:2},{value:"<code>public T ParseCharacterConfig&lt;T&gt;()</code>",id:"public-t-parsecharacterconfigt",level:3},{value:"Arguments",id:"arguments",level:4},{value:"Return Value",id:"return-value",level:4},{value:"Examples",id:"examples",level:4},{value:"<code>public void UpdateCharacterConfig&lt;T&gt;(T newConfig)</code>",id:"public-void-updatecharacterconfigtt-newconfig",level:3},{value:"Arguments",id:"arguments-1",level:4},{value:"Return Value",id:"return-value-1",level:4},{value:"Examples",id:"examples-1",level:4}],s=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},u=s("Tabs"),d=s("TabItem"),m={toc:c},f="wrapper";function g(e){let{components:t,...a}=e;return(0,r.kt)(f,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"botinformation"},"BotInformation"),(0,r.kt)("p",null,"A serializable class holding information about a bot that has been connected to the scene\nthrough the ",(0,r.kt)("a",{parentName:"p",href:"./RGBotSpawnManager"},(0,r.kt)("inlineCode",{parentName:"a"},"RGBotSpawnManager"))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"clientId")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"uint")),(0,r.kt)("td",{parentName:"tr",align:null},"The ID of the client who owns the bot")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"characterConfig")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"A JSON string that define the customizations for your bot")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"botName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the bot")))),(0,r.kt)("h2",{id:"class-methods"},"Class Methods"),(0,r.kt)("h3",{id:"public-t-parsecharacterconfigt"},(0,r.kt)("inlineCode",{parentName:"h3"},"public T ParseCharacterConfig<T>()")),(0,r.kt)("p",null,"Parses the JSON from ",(0,r.kt)("inlineCode",{parentName:"p"},"characterConfig")," (",(0,r.kt)("a",{parentName:"p",href:"./csharp/configuration#characterconfig"},"C#"),") (",(0,r.kt)("a",{parentName:"p",href:"./javascript/configuration#characterconfig"},"Javascript"),") into the serialized data type\npassed into the generic of this function. This ",(0,r.kt)("inlineCode",{parentName:"p"},"characterConfig")," (",(0,r.kt)("a",{parentName:"p",href:"./csharp/configuration#characterconfig"},"C#"),") (",(0,r.kt)("a",{parentName:"p",href:"./javascript/configuration#characterconfig"},"Javascript"),")\nis the JavaScript Object that comes from the bot logic."),(0,r.kt)("h4",{id:"arguments"},"Arguments"),(0,r.kt)("p",null,"None"),(0,r.kt)("h4",{id:"return-value"},"Return Value"),(0,r.kt)("p",null,"The object of type ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," that has been deserialized from JSON in the ",(0,r.kt)("inlineCode",{parentName:"p"},"characterConfig")," (",(0,r.kt)("a",{parentName:"p",href:"./csharp/configuration#characterconfig"},"C#"),") (",(0,r.kt)("a",{parentName:"p",href:"./javascript/configuration#characterconfig"},"Javascript"),") field."),(0,r.kt)("h4",{id:"examples"},"Examples"),(0,r.kt)(u,{mdxType:"Tabs"},(0,r.kt)(d,{value:"deserialize_config",label:"Deserialize a bot's config from JSON",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"[Serializable]\npublic class BotCharacterConfig\n{\n    public float speed;\n}\n\nvar myBotConfig = botInformation.ParseCharacterConfig<BotCharacterConfig>();\nDebug.Log(myBotConfig.speed);\n")))),(0,r.kt)("h3",{id:"public-void-updatecharacterconfigtt-newconfig"},(0,r.kt)("inlineCode",{parentName:"h3"},"public void UpdateCharacterConfig<T>(T newConfig)")),(0,r.kt)("p",null,"Overrides the ",(0,r.kt)("inlineCode",{parentName:"p"},"characterConfig")," (",(0,r.kt)("a",{parentName:"p",href:"./csharp/configuration#characterconfig"},"C#"),") (",(0,r.kt)("a",{parentName:"p",href:"./javascript/configuration#characterconfig"},"Javascript"),") defined in the JavaScript code for your bot. For example, when seating a bot, you may discover\nthat the requested character type is no longer available, and you need to let the bot know. The generic type you\npass in must be ","[Serializable]","."),(0,r.kt)("h4",{id:"arguments-1"},"Arguments"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Argument Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"lateJoin")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"If true, this bot is joining after the game started or after any initial bots have been spawned")))),(0,r.kt)("h4",{id:"return-value-1"},"Return Value"),(0,r.kt)("p",null,"None"),(0,r.kt)("h4",{id:"examples-1"},"Examples"),(0,r.kt)(u,{mdxType:"Tabs"},(0,r.kt)(d,{value:"save_config",label:"Save a new config for the connected bot",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"[Serializable]\npublic class BotCharacterConfig\n{\n    public float speed;\n}\nvar newConfig = BotCharacterConfig()\nnewConfig.speed = 1000;\nvar myBotConfig = botInformation.UpdateCharacterConfig<BotCharacterConfig>(newConfig);\n")))))}g.isMDXComponent=!0}}]);