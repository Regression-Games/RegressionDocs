"use strict";(self.webpackChunkregression_docs=self.webpackChunkregression_docs||[]).push([[1479],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),g=o,m=p["".concat(l,".").concat(g)]||p[g]||h[g]||r;return n?a.createElement(m,i(i({ref:t},d),{},{components:n})):a.createElement(m,i({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2032:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=n(7462),o=(n(7294),n(3905)),r=n(7889);const i={sidebar_label:"Using Gameplay Sessions"},s="Using Gameplay Sessions",l={unversionedId:"gameplay-sessions/gameplay-sessions-usage",id:"gameplay-sessions/gameplay-sessions-usage",title:"Using Gameplay Sessions",description:"Preparing the Overlay",source:"@site/docs/gameplay-sessions/gameplay-sessions-usage.mdx",sourceDirName:"gameplay-sessions",slug:"/gameplay-sessions/gameplay-sessions-usage",permalink:"/gameplay-sessions/gameplay-sessions-usage",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Using Gameplay Sessions"},sidebar:"unitySidebar",previous:{title:"Getting Started with Gameplay Sessions",permalink:"/gameplay-sessions/gameplay-sessions-getting-started"},next:{title:"Gameplay Sessions Technical Reference",permalink:"/gameplay-sessions/gameplay-sessions-reference"}},c={},d=[{value:"Preparing the Overlay",id:"preparing-the-overlay",level:2},{value:"Recording Gameplay",id:"recording-gameplay",level:2},{value:"Playing Back a Recording",id:"playing-back-a-recording",level:2},{value:"Advanced Options",id:"advanced-options",level:2},{value:"Choosing an FPS for recording",id:"choosing-an-fps-for-recording",level:3},{value:"Changing your recording location",id:"changing-your-recording-location",level:3},{value:"Input threshold options",id:"input-threshold-options",level:3},{value:"Configuring game-state collection",id:"configuring-game-state-collection",level:3},{value:"Excluding objects from recordings",id:"excluding-objects-from-recordings",level:4},{value:"Including objects from your scene in the state",id:"including-objects-from-your-scene-in-the-state",level:4},{value:"Collapsing renderers",id:"collapsing-renderers",level:4},{value:"Include off-camera objects",id:"include-off-camera-objects",level:4},{value:"Collect state from behaviours",id:"collect-state-from-behaviours",level:4}],p={toc:d},h="wrapper";function g(e){let{components:t,...i}=e;return(0,o.kt)(h,(0,a.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-gameplay-sessions"},"Using Gameplay Sessions"),(0,o.kt)("h2",{id:"preparing-the-overlay"},"Preparing the Overlay"),(0,o.kt)("p",null,"The Regression Games SDK's ",(0,o.kt)("inlineCode",{parentName:"p"},"RGOverlayCanvasV2")," prefab is a UI component that will allow you to record and replay Gameplay\nSessions."),(0,o.kt)(r.ZP,{mdxType:"OverlayPartial"}),(0,o.kt)("h2",{id:"recording-gameplay"},"Recording Gameplay"),(0,o.kt)("p",null,"Once the overlay has been added to your scene(s), click play.\nThe Regression Games logo at the bottom of the Scene View will display recording and playback controls."),(0,o.kt)("p",null,'Recording can be started by clicking the red "record" button below the logo.\nOnce clicked, the SDK will begin recording your gameplay. You can tell that recording is active when the red button begins pulsing.\nClicking the button again will stop the recording and sync the Gameplay Session to your Regression Games account.'),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Start a recording",src:n(5773).Z,width:"456",height:"312"})),(0,o.kt)("h2",{id:"playing-back-a-recording"},"Playing Back a Recording"),(0,o.kt)("p",null,'A recording can be replayed by initiating "play" mode from your Unity editor and selecting the menu button below the Regression Games logo.\nThis will launch a file explorer at the location of the recordings folder on your device.\nNavigate into the folder of the recording you\'d like to replay, select its ',(0,o.kt)("inlineCode",{parentName:"p"},"data.zip"),' file, and then click "Load Replay".\nOnce you\'ve selected a replay, click the Play button below the Regression Games logo to begin playback.'),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Open the Gameplay Session Selector",src:n(8472).Z,width:"2106",height:"1134"}),"\n",(0,o.kt)("img",{alt:"Select the Gameplay Session",src:n(4986).Z,width:"2108",height:"1136"})),(0,o.kt)("h2",{id:"advanced-options"},"Advanced Options"),(0,o.kt)("h3",{id:"choosing-an-fps-for-recording"},"Choosing an FPS for recording"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Recording Min FPS")," field under ",(0,o.kt)("inlineCode",{parentName:"p"},"RGOverlayCanvasV2")," > ",(0,o.kt)("inlineCode",{parentName:"p"},"ScreenRecorder")," allows you to configure\nhow often the SDK scrapes the game for state data.\nIts default value is 0, which instructs the SDK to only record state data when it detects a\n",(0,o.kt)("a",{parentName:"p",href:"/gameplay-sessions/gameplay-sessions-reference#key-frames"},(0,o.kt)("strong",{parentName:"a"},"key frame")),". In most cases, this should be set to 0, as most games will only require state collection on key frames.\nSetting ",(0,o.kt)("inlineCode",{parentName:"p"},"Recording Min FPS")," to a value greater than 0 will cause the SDK to record data at that frequency,\nin addition to recording any key frame that was detected.\nFor instance, a setting of ",(0,o.kt)("inlineCode",{parentName:"p"},"5")," will result in the SDK scraping the game for state data 5 times per second."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Change the FPS at which data is collected from the game",src:n(7116).Z,width:"1542",height:"668"})),(0,o.kt)("h3",{id:"changing-your-recording-location"},"Changing your recording location"),(0,o.kt)("p",null,"By default, recorded data is stored in your home directory under ",(0,o.kt)("inlineCode",{parentName:"p"},"/unity_videos"),".\nThis directory can be overridden by changing the ",(0,o.kt)("inlineCode",{parentName:"p"},"State Recordings Directory")," field under ",(0,o.kt)("inlineCode",{parentName:"p"},"RGOverlayCanvasV2")," > ",(0,o.kt)("inlineCode",{parentName:"p"},"ScreenRecorder"),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Change the location where data is saved",src:n(2881).Z,width:"1542",height:"668"})),(0,o.kt)("h3",{id:"input-threshold-options"},"Input threshold options"),(0,o.kt)("p",null,"Some devices might recognize holding down a key as spamming key presses for that key instead.\nThe ",(0,o.kt)("inlineCode",{parentName:"p"},"Key Held Threshold Seconds")," field under ",(0,o.kt)("inlineCode",{parentName:"p"},"RGOverlayCanvasV2")," > ",(0,o.kt)("inlineCode",{parentName:"p"},"Keyboard Input Action Observer"),"\nallows you to configure the threshold for how long a key must be released\nbetween presses before each press is considered a distinct event.\nThis setting defaults to 0.1 seconds, and on Windows should not have to be changed. This setting is primarily used on\nMac and other platforms that handle key repeats in a non-standard way.  If you do experience key click spamming,\nincrease the value."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Change the threshold for held key inputs",src:n(3805).Z,width:"1542",height:"668"})),(0,o.kt)("h3",{id:"configuring-game-state-collection"},"Configuring game-state collection"),(0,o.kt)("p",null,"The Regression Games SDK scrapes the game for state data by traversing the game's GameObject hierarchy\nand recording any data it considers relevant to playing back recordings or running tests."),(0,o.kt)("h4",{id:"excluding-objects-from-recordings"},"Excluding objects from recordings"),(0,o.kt)("p",null,"Adding the ",(0,o.kt)("inlineCode",{parentName:"p"},"RGExcludeFromState")," component to a GameObject will prevent its state data from being recorded.\nThis can be useful for ignoring irrelevant regions of a level\nor other objects that are not relevant to your playback or testing.\nChildren of an excluded GameObject are also excluded from the recording, effectively ignoring the entire hierarchy."),(0,o.kt)("h4",{id:"including-objects-from-your-scene-in-the-state"},"Including objects from your scene in the state"),(0,o.kt)("p",null,"By default, the system records game objects visible in the scene with a renderer. Other game objects can be included in\nthe state by attaching the ",(0,o.kt)("inlineCode",{parentName:"p"},"RGIncludeInState")," MonoBehaviour to them."),(0,o.kt)("h4",{id:"collapsing-renderers"},"Collapsing renderers"),(0,o.kt)("p",null,'By default, the SDK collapses a child GameObject\'s data into its respective top-level GameObject.\nIf a GameObject hierarchy has colliders/renderers/animators/etc. at multiple levels,\nthey will be represented together as a single "entity" in the recorded state.\nThis is generally desirable, as it allows you to treat each player (for example) as a complete entity in the state\nrather than visualizing individual child components as their own entities.'),(0,o.kt)("p",null,"However, it can also be useful to disable this behaviour in cases where you'd like to validate\nrender bounds on individual armatures, weapons, or other components that are children in the hierarchy."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Collapse Renderers into Top Level Game Object")," checkbox under ",(0,o.kt)("inlineCode",{parentName:"p"},"RGOverlayCanvasV2")," > ",(0,o.kt)("inlineCode",{parentName:"p"},"In Game Object Finder"),"\ncontrols this behaviour, where checking the box forces collapsing and unchecking the box disables collapsing."),(0,o.kt)("h4",{id:"include-off-camera-objects"},"Include off-camera objects"),(0,o.kt)("p",null,"By default, the SDK only records state data for GameObjects that are within the main camera's viewport.\nIn many cases, this is desirable because off-camera GameObjects are not relevant to playback or applicable test scenarios.\nOff-camera objects can be included in recordings by toggling the\n",(0,o.kt)("inlineCode",{parentName:"p"},"Include Only On Camera Objects")," checkbox under ",(0,o.kt)("inlineCode",{parentName:"p"},"RGOverlayCanvasV2")," > ",(0,o.kt)("inlineCode",{parentName:"p"},"In Game Object Finder"),".\nChecking this box limits state collection to on-camera objects and unchecking the box enables state collection for\noff-camera objects."),(0,o.kt)("admonition",{title:"Note",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Recording objects outside of the camera viewport may increase the size of recordings and impact performance.")),(0,o.kt)("h4",{id:"collect-state-from-behaviours"},"Collect state from behaviours"),(0,o.kt)("p",null,"By default, the SDK only records state data from GameObjects themselves, and does not record\nfields or property values from attached Behaviours.\nThese are generally not needed for playing back recordings, but can be extremely useful for test scenarios."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Collect State from Behaviours")," checkbox under ",(0,o.kt)("inlineCode",{parentName:"p"},"RGOverlayCanvasV2")," > ",(0,o.kt)("inlineCode",{parentName:"p"},"In Game Object Finder"),"\ndictates whether recordings include data from Behaviours attached to a GameObject.\nChecking this box will include all fields and properties from all Behaviours attached to a GameObject in the recorded state,\nand unchecking the box will exclude them."),(0,o.kt)("admonition",{title:"Note",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Recording state from Behaviours may incur an impact on performance.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Various options for scraping game objects from the scene",src:n(1023).Z,width:"1542",height:"668"})),(0,o.kt)("p",null,"To learn more about the data format and intricacies of this tool, visit the next page for a technical reference."))}g.isMDXComponent=!0},7889:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(7462),o=(n(7294),n(3905));const r={toc:[]},i="wrapper";function s(e){let{components:t,...s}=e;return(0,o.kt)(i,(0,a.Z)({},r,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Find the ",(0,o.kt)("inlineCode",{parentName:"p"},"RGOverlayCanvasV2")," prefab by navigating to ",(0,o.kt)("strong",{parentName:"p"},"Packages")," > ",(0,o.kt)("strong",{parentName:"p"},"Regression Games Unity Bots")," > ",(0,o.kt)("strong",{parentName:"p"},"Runtime")," > ",(0,o.kt)("strong",{parentName:"p"},"Prefabs")," and\ndrag it into your scene's object hierarchy. Make sure that the canvas is at the top of the hierarchy, so that it is always\nvisible and interactable."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Note that this overlay ",(0,o.kt)("strong",{parentName:"p"},"must be present in your scene")," for Regression Games to function. The visibility\nof the overlay can be hidden through the Regression Games settings pane under ",(0,o.kt)("strong",{parentName:"p"},"Edit")," > ",(0,o.kt)("strong",{parentName:"p"},"Project Settings")," >\n",(0,o.kt)("strong",{parentName:"p"},"Regression Games"),". Place this component into each scene that must be able to use Regression Games SDK features.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Screenshot of the search pane for the RGOverlayCanvas.",src:n(2317).Z,width:"1188",height:"650"})))}s.isMDXComponent=!0},1023:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/base_options_finder-6eea987297e16c6761135b23c830926b.png"},7116:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/base_options_fps-dcd9c65f8eb16e87b914454fb1f5d351.png"},2881:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/base_options_location-880ce16fc06d5a4aa822fe00d53ae5c4.png"},3805:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/base_options_threshold-2e739e8a46a4d44c1eae906c89c41885.png"},4986:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/overlay_choose_session-8eb7ad4bce3daf8692697c602c151ef0.png"},8472:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/overlay_click_load-3e8666a664ee8dcd340e5432c36951d4.png"},5773:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/record-329dbbe9d75101c68cc5edbe24bef504.png"},2317:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/overlay_4-445ff54ff8258cac6b27cddcec1edd7d.png"}}]);