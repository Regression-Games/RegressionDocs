"use strict";(self.webpackChunkregression_docs=self.webpackChunkregression_docs||[]).push([[4854],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),p=o,g=u["".concat(l,".").concat(p)]||u[p]||h[p]||i;return n?a.createElement(g,r(r({ref:t},c),{},{components:n})):a.createElement(g,r({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,r[1]=s;for(var d=2;d<i;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},528:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(7462),o=(n(7294),n(3905));const i={toc:[]},r="wrapper";function s(e){let{components:t,...s}=e;return(0,o.kt)(r,(0,a.Z)({},i,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"New Agent Builder projects start with a root node and a sequence node to form the basis of your tree."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Default Tree",src:n(5591).Z,width:"3416",height:"1742"})),(0,o.kt)("p",null,"To begin building your tree, click the connector at the bottom of the sequence node and drag.\nWhen you release, you'll be presented with different types of nodes that can be added to this sequence.\nFor this demonstration, we'll create an action node.\nYou can repeat this process for any node that is allowed to have children."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Select a Node Type",src:n(5882).Z,width:"1628",height:"1510"}),"\n",(0,o.kt)("img",{alt:"Create an Action Node",src:n(6547).Z,width:"1628",height:"944"}),"\n",(0,o.kt)("img",{alt:"Example Tree",src:n(744).Z,width:"1628",height:"1362"})),(0,o.kt)("p",null,"Clicking on a node opens a panel to the right side of your screen.\nThis panel contains information about the selected node including a description of the node's type and a label, as well as a button to delete the node from the tree.\nIt's a good idea to set labels to keep track of what you want each node or branch to do.\nIf the selected node is a leaf node, such as an action or condition, then the panel will also contain fields used for defining the node's behavior via code."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Open the Node Panel",src:n(8695).Z,width:"3410",height:"1982"})))}s.isMDXComponent=!0},1364:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(7462),o=(n(7294),n(3905));const i={toc:[]},r="wrapper";function s(e){let{components:t,...n}=e;return(0,o.kt)(r,(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A behavior tree is a decision-making model used to determine which actions an agent (such as a character in a video game) should take in different situations.\nYou can think of a behavior tree as a flow chart that the AI follows, choosing appropriate actions based on what it knows about itself and its environment.\nA behavior tree is composed of nodes organized into a hierarchical structure which starts with a root node and branches out to form different paths.\nEach path represents a line of decision-making that results in one or more actions for the AI to perform."),(0,o.kt)("p",null,"Each node in the tree executes logic and returns one of the following statuses as a result:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Running")," -> The task represented by this node's branch hasn't yet completed."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Success")," -> The node has completed its task successfully."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Failure")," -> The node has failed its task. This doesn't necessarily mean an error occurred. For example, a heal action might fail if the character doesn't have any potions.")),(0,o.kt)("p",null,"Different types of nodes have different responsibilities and may react differently to the statuses of other nodes."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Root Node"),": The beginning of the tree, where the AI starts its decision-making.\nIts job is simply to execute whatever node is below it in the tree and return its status."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Sequence Node"),": This node has one or more children and acts as a logical AND.\nIt executes its child nodes sequentially, and if any one of them fail then the Sequence Node immediately returns a failure status, skipping execution of any remaining children."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Selector Node"),": This node also has one or more children, but acts as a logical OR.\nIt executes its child nodes sequentially, and if any one of them succeed then the Selector Node immediately returns a success status, skipping execution of any remaining children.\nIf none succeed, then the Selector Node returns a failure status instead."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Action Node"),": This node is a leaf node, meaning it cannot have any children of its own.\nThis node represents an action for the AI to perform such as moving in a certain direction or interacting with an object in its environment."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Condition Node"),": This node is also a leaf node. It evaluates whether one or more pre-conditions have been satisfied for a specific action."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Decorator Node"),': There are several kinds of Decorator Nodes, each of which can have only one child. These nodes modify the child\'s status in some way.\nFor example, an "Inverter" Decorator will succeed if its child fails, and vice versa.')),(0,o.kt)("p",null,"Let's consider a practical example where we want our AI to talk to another character.\nThe \"conversation\" branch should fail if there isn't anyone to talk to.\nPerhaps the character can't see anyone else from where they're standing, or perhaps everyone present is already engaged in conversation.\nReturning the failure status allows our AI to evaluate other branches for potential actions.\nKeep in mind that the conversation branch may fail even if it does find a valid target -\nfor instance, if the character we want to talk to is too far away, then the AI will need to approach them first.\nIf all preconditions for talking to the character are met, and we initiate conversation, then the branch will return the success status.\nThis indicates that the branch has accomplished its tasks and that we can evaluate other branches for things like choosing a conversation topic."),(0,o.kt)("p",null,"What about the running status? This status is unique in that a parent node will immediately return running if any of its children return running,\nessentially short-circuiting the tree. This is useful in cases where the action an AI wants to perform isn't instantaneous.\nFor example, initiating conversation with another character might trigger a greeting animation which takes several seconds to play out.\nOur conversation branch could check whether the AI is in the middle of a greeting animation before evaluating other preconditions,\npreventing it from repeating logic from this branch."),(0,o.kt)("p",null,"For a deeper dive into behavior trees, their nodes, and practical examples of their usage in video games, ",(0,o.kt)("a",{parentName:"p",href:"https://www.gamedeveloper.com/programming/behavior-trees-for-ai-how-they-work"},"follow this link"),"."))}s.isMDXComponent=!0},9127:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(7462),o=(n(7294),n(3905));const i={toc:[]},r="wrapper";function s(e){let{components:t,...s}=e;return(0,o.kt)(r,(0,a.Z)({},i,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you've used the Agent Builder to create a bot before, then you can locate that bot in the Bot Manager and open the Agent Builder interface."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Open Agent Builder",src:n(3579).Z,width:"1764",height:"444"})),(0,o.kt)("p",null,"At any time, you can click the \"Reload from Server\" button at the top of the page to revert to your most recently-saved version\n(this will discard any unsaved changes). Don't forget to save when you're done!"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Load Your Tree",src:n(7862).Z,width:"1592",height:"760"})))}s.isMDXComponent=!0},8902:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(7462),o=(n(7294),n(3905));const i={toc:[]},r="wrapper";function s(e){let{components:t,...s}=e;return(0,o.kt)(r,(0,a.Z)({},i,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Save your tree early and often! Any changes made to your AI will be lost if you leave the Agent Builder without saving."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Save Your Tree",src:n(6419).Z,width:"1592",height:"760"})))}s.isMDXComponent=!0},7388:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>f,frontMatter:()=>d,metadata:()=>u,toc:()=>p});var a=n(7462),o=(n(7294),n(3905)),i=n(1364),r=n(9127),s=n(528),l=n(8902);const d={sidebar_label:"Using the Agent Builder"},c="Creating AIs Using the Agent Builder",u={unversionedId:"players/creating-bots/agent-builder",id:"players/creating-bots/agent-builder",title:"Creating AIs Using the Agent Builder",description:"Regression Games' Agent Builder is an easy-to-use visual editor for constructing AI behavior trees.",source:"@site/docs/players/creating-bots/agent-builder.mdx",sourceDirName:"players/creating-bots",slug:"/players/creating-bots/agent-builder",permalink:"/players/creating-bots/agent-builder",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Using the Agent Builder"},sidebar:"playersSidebar",previous:{title:"Using the Blockly Editor",permalink:"/players/creating-bots/blockly"},next:{title:"Development Requirements",permalink:"/players/creating-bots/coding/dev-requirements"}},h={},p=[{value:"What Is a Behavior Tree?",id:"what-is-a-behavior-tree",level:2},{value:"Getting Started with Agent Builder",id:"getting-started-with-agent-builder",level:2},{value:"Loading Your Tree",id:"loading-your-tree",level:2},{value:"Adding Nodes",id:"adding-nodes",level:2},{value:"Adding Code",id:"adding-code",level:3},{value:"Validating Code",id:"validating-code",level:3},{value:"Saving Your Tree",id:"saving-your-tree",level:2}],g={toc:p},m="wrapper";function f(e){let{components:t,...d}=e;return(0,o.kt)(m,(0,a.Z)({},g,d,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"creating-ais-using-the-agent-builder"},"Creating AIs Using the Agent Builder"),(0,o.kt)("p",null,"Regression Games' Agent Builder is an easy-to-use visual editor for constructing AI behavior trees.\nAgent Builder provides powerful features for bot development, including a code editor powered by our AI code assistant\n(driven by ",(0,o.kt)("a",{parentName:"p",href:"https://openai.com/blog/chatgpt"},"OpenAI's GPT-4"),").\nOur code assistant has all the knowledge required to write code for our supported games and game modes.\nThis makes our Agent Builder an excellent tool for those new to our AI libraries, or even to programming itself!"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"We're constantly working to improve Agent Builder.\nYou can report issues and submit feature requests through our ",(0,o.kt)("a",{parentName:"p",href:"https://regression-games.sleekplan.app/feedback"},"Feedback Site"),".")),(0,o.kt)("h2",{id:"what-is-a-behavior-tree"},"What Is a Behavior Tree?"),(0,o.kt)(i.ZP,{mdxType:"BehaviorTree"}),(0,o.kt)("h2",{id:"getting-started-with-agent-builder"},"Getting Started with Agent Builder"),(0,o.kt)("p",null,"Create a new AI from the Bot Manager and select ",(0,o.kt)("inlineCode",{parentName:"p"},"Agent Builder")," from the list of creation options,\ngive your new bot a name, and then finalize. It's that easy!"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Create new AI",src:n(2047).Z,width:"2942",height:"880"}),"\n",(0,o.kt)("img",{alt:"Select Creation Option",src:n(5743).Z,width:"1450",height:"1546"})),(0,o.kt)("h2",{id:"loading-your-tree"},"Loading Your Tree"),(0,o.kt)(r.ZP,{mdxType:"LoadingYourTree"}),(0,o.kt)("h2",{id:"adding-nodes"},"Adding Nodes"),(0,o.kt)(s.ZP,{mdxType:"AddingNodes"}),(0,o.kt)("h3",{id:"adding-code"},"Adding Code"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"All samples in this section are written in Typescript."),(0,o.kt)("p",{parentName:"admonition"},"We're constantly evaluating support for other languages.\nFeel free to request others through our ",(0,o.kt)("a",{parentName:"p",href:"https://regression-games.sleekplan.app/feedback"},"Feedback Site"),".")),(0,o.kt)("p",null,"The nodes in your tree won't be useful until you give them some logic to execute.\nClick on a leaf node to open the side-panel. You'll see the following stub provided in the code editor:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"class LeafNode extends TreeNode {\n  public override async execute(): Promise<NodeStatus> {\n    return NodeStatus.SUCCESS;\n  }\n}\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"All of your node's code must be defined within the ",(0,o.kt)("inlineCode",{parentName:"p"},"LeafNode")," class, and the ",(0,o.kt)("inlineCode",{parentName:"p"},"execute")," method must be defined as your entrypoint into the node.\nYou may encounter errors loading your AI into a game if these are not properly defined when you save your tree.")),(0,o.kt)("p",null,"You can either manually type code into the editor (see the ",(0,o.kt)("a",{parentName:"p",href:"../supported-games/minecraft/apis/rg-bot-api"},"rg-bot API"),'),\nor you can have our AI code assistant do the heavy lifting for you.\nTo generate code using the assistant, describe what you want this node to do in the "GPT Prompt" field then click the "Generate Code" button.\nThe editor will be disabled as code appears, and you can modify the output once it\'s finished.'),(0,o.kt)("p",null,"There are a lot of different decision-making points and available actions for our supported games,\nso let's start with something simple - getting the AI to walk around.\nThis example will have the code assistant use our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Regression-Games/RegressionBot"},"rg-bot library for Minecraft"),"."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Generating Code will overwrite anything currently in the editor. It's a good idea to save your tree before trying out new prompts.")),(0,o.kt)("p",null,"If you enter the following prompt:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'If "wanderDistance" is not defined, then set it to 5. Then wander up to the defined "wanderDistance".\n')),(0,o.kt)("p",null,"then the assistant should output code similar to this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'class LeafNode extends TreeNode {\n  public override async execute(): Promise<NodeStatus> {\n    const bot = this.getData<RGBot>("bot");\n    if (!bot) {\n      return NodeStatus.FAILURE;\n    }\n\n    let wanderDistance = this.getData<number>("wanderDistance");\n    if (!wanderDistance) {\n      wanderDistance = 5;\n      this.setData("wanderDistance", wanderDistance);\n    }\n\n    const wanderResult = await bot.wander(0, wanderDistance);\n    if (wanderResult) {\n      return NodeStatus.SUCCESS;\n    } else {\n      return NodeStatus.FAILURE;\n    }\n  }\n}\n')),(0,o.kt)("p",null,"The above output is a good example of how properly-formatted code should look when you're generating or writing it."),(0,o.kt)("p",null,"You may notice that this code calls the ",(0,o.kt)("inlineCode",{parentName:"p"},"getData")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"setData")," methods.\nThese can be used to share data between nodes."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"We recommend you specify a data type whenever you call ",(0,o.kt)("inlineCode",{parentName:"p"},"getData")," to take advantage of type hints in the editor.")),(0,o.kt)("p",null,"For instance:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'// "bot" is available to you by default\nconst bot = this.getData<RGBot>("bot");\n\n// you can also define and retrieve your own key-value pairs\nthis.setData("myString", "Hello World");\nconst myString = this.getData<string>("myString");\n\nthis.setData("myBool", true);\nconst myBool = this.getData<boolean>("myBool");\n')),(0,o.kt)("p",null,'Using these methods, we could add a node to our tree that increases the "wanderDistance" whenever the AI has nothing important to do in the nearby area.\nThis effectively encourages the AI to move further and further from its current location if it repeatedly fails to perform any meaningful actions.\nThe prompt for this could be worded as:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},'If "wanderDistance" is undefined, then set it to 5. Otherwise increase it by 2. Then succeed.\n')),(0,o.kt)("p",null,"which should produce code similar to this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'class LeafNode extends TreeNode {\n  public override async execute(): Promise<NodeStatus> {\n    let wanderDistance = this.getData<number>("wanderDistance");\n    if (wanderDistance === undefined) {\n      this.setData("wanderDistance", 5);\n    } else {\n      this.setData("wanderDistance", wanderDistance + 2);\n    }\n      return NodeStatus.SUCCESS;\n    }\n}\n')),(0,o.kt)("p",null,"You may occasionally receive code from the AI assistant that doesn't follow our expected format,\nor code that functions differently in-game than your prompt intends.\nIf this happens, you may need to alter your prompt and re-submit it for new output, or fix the output manually.\nFor the above prompt, note that we explicitly prompt the assistant to succeed after incrementing \"wanderDistance\".\nIf we omit this instruction, the assistant assumes that we want to perform the wander action immediately, even though we haven't explicitly told it to do so.\nThis is a good example of how prompts sometimes need tweaking to achieve your intended result."),(0,o.kt)("h3",{id:"validating-code"},"Validating Code"),(0,o.kt)("p",null,'The embedded code editor offers standard syntax highlighting and intelligent code completion features for Regressions Games APIs.\nTo take this a step further, our AI code assistant can analyze code from the editor and provide suggestions for fixing syntax errors, bugs, and inefficiencies.\nClicking the "Validate Code" button will cause a text box to appear with the assistant\'s analysis results.'),(0,o.kt)("p",null,"Let's give this a try with some code that we know is inefficient.\nThe following code attempts to find all the rabbits and chickens nearby, but it searches an unnecessarily large area.\nCopy and paste it into your node:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"class LeafNode extends TreeNode {\n  public override async execute(): Promise<NodeStatus> {\n    const bot = this.getData<RGBot>('bot');\n\n    const attackableAnimals = await bot.findEntities({\n      entityNames: ['Rabbit', 'Chicken'],\n      attackable: true,\n      maxDistance: Infinity\n    });\n\n    if (attackableAnimals.length == 0) {\n      return NodeStatus.FAILURE;\n    }\n\n    return NodeStatus.SUCCESS;\n  }\n}\n")),(0,o.kt)("p",null,'Clicking the "Validate Code" button should result in a warning that ',(0,o.kt)("inlineCode",{parentName:"p"},"maxDistance")," should be set to ",(0,o.kt)("inlineCode",{parentName:"p"},"100")," or less, rather than ",(0,o.kt)("inlineCode",{parentName:"p"},"Infinity"),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Validate Code",src:n(4649).Z,width:"3414",height:"1644"})),(0,o.kt)("p",null,"You can close validation results at any time and reopen them by clicking the clipboard icon."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"ReOpen Validation Results",src:n(8175).Z,width:"1686",height:"844"})),(0,o.kt)("h2",{id:"saving-your-tree"},"Saving Your Tree"),(0,o.kt)(l.ZP,{mdxType:"SavingYourTree"}))}f.isMDXComponent=!0},5743:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/create-for-minecraft-212079cca3ef16818d5efaf1c469f4aa.png"},5591:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/default-tree-0c7196d041d60541d52632bc40ec15c8.png"},8695:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/edit-node-bfbfd211cc70ca494c55339461817eb5.png"},744:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/example-tree-1-3faed7f282c29dde923628b01f8603d1.png"},7862:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/load-tree-b6b775da48ccbb0d5d37bcd7a992408b.png"},6547:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/new-action-node-0ed481de19f01ed6763486426af3c21b.png"},3579:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/open-agent-builder-bd315e2712f11b71057d5087d44c4929.png"},8175:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/reopen-validation-results-minecraft-c80bdbc4b7ea06c9a2783c0ab2a57d70.png"},6419:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/save-tree-54ed26871667603b04f90b1f32d08131.png"},5882:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/select-node-type-38ba76b782100130d8ff9046f8913ceb.png"},4649:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/validation-results-minecraft-7dc2f415f0a12108615a369b022f22a9.png"},2047:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/create-bot-button-166c7415adc4d1edd3bfd940bea5127b.png"}}]);